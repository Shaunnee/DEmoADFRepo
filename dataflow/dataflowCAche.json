{
	"name": "dataflowCAche",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "pay1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "employeenew",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "Depx",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"name": "cachedmaXiD"
				},
				{
					"dataset": {
						"referenceName": "outdataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"name": "depCaxche"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as integer,",
				"          {Customer name} as string,",
				"          Title as string,",
				"          depid as boolean,",
				"          salary as integer,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     preferredIntegralType: 'integer',",
				"     partitionBy('hash', 1)) ~> source1",
				"source(output(",
				"          {Customer name} as string,",
				"          Title as string,",
				"          depid as integer,",
				"          salary as integer,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          Id as integer,",
				"          name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source2 keyGenerate(output(newKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(newKey1 = newKey + cachedmaXiD#outputs()[1].ID,",
				"          depNew = depCaxche#lookup(depid).deptName\r",
				") ~> derivedColumn1",
				"source1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          ID",
				"     )) ~> cachedmaXiD",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ID = newKey1,",
				"          {Customer name},",
				"          Title,",
				"          depid,",
				"          depname = depNew,",
				"          salary",
				"     )) ~> sink1",
				"source3 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     keys:['Id'],",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          Id,",
				"          deptName = name",
				"     )) ~> depCaxche"
			]
		}
	}
}